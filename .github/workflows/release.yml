on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch:

name: Build Release

jobs:
  deb-package:
    name: build DEB-Package
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt update && sudo apt install debhelper build-essential -y

      - name: Build
        run: make deb

      - name: Copy artifacts
        run: mkdir package && cp ../linuxmuster-tools7_* ./package

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: deb-package
          path: package/*
        
  github-release:
    needs: deb-package
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    name: GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: deb-package

      - name: Extract current changes
        run: cat *.changes | sed '0,/^Changes:$/d' | sed '/Checksums.*/Q' | sed '1,2d' | tail >> ./current-changes

      - name: Define distribution variable
        run: |
          export DISTRIBUTION=$(grep -i ^Distribution *.changes | awk -F\: '{ print $2 }' | awk '{ print $1 }')
          echo "DISTRIBUTION=$DISTRIBUTION" >> $GITHUB_ENV
          
          export VERSION=$(grep -i ^Version *.changes | awk -F\: '{ print $2 }' | awk '{ print $1 }')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.VERSION }} (${{ env.DISTRIBUTION }})
          draft: false
          body_path: ./current-changes

      - name: Delete current changes file
        run: rm ./current-changes

      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: .